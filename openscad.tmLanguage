<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scad</string>
	</array>
	<key>name</key>
	<string>OpenScad</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literals</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#support</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>//</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.scad</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.double-slash.scad</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.scad</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.scad</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(else|if)\b</string>
					<key>name</key>
					<string>keyword.control.conditional.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(return)\b</string>
					<key>name</key>
					<string>keyword.control.flow.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(for|let|intersection_for)\b</string>
					<key>name</key>
					<string>keyword.control.loop.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(assign|assert)\b</string>
					<key>name</key>
					<string>keyword.other.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+|-|\*|/|%|=</string>
					<key>name</key>
					<string>keyword.operator.arithmetical.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;|&lt;=|==|!=|&gt;=|&gt;</string>
					<key>name</key>
					<string>keyword.operator.relational.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;&amp;|\|\||!</string>
					<key>name</key>
					<string>keyword.operator.logical.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?</string>
					<key>name</key>
					<string>keyword.operator.conditional.scad</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\btrue\b</string>
					<key>name</key>
					<string>constant.language.boolean.true.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfalse\b</string>
					<key>name</key>
					<string>constant.language.boolean.false.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bundef\b</string>
					<key>name</key>
					<string>constant.language.boolean.undef.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bPI\b</string>
					<key>name</key>
					<string>constant.language.boolean.pi.scad</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.scad</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>name</key>
							<string>constant.character.escape.untitled</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\d+(\.\d+)?)\b</string>
					<key>name</key>
					<string>constant.numeric.scad</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.module.scad</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.scad</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.scad</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.module.scad</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.scad</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(module|function)\s+([\w\d]*)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.module.scad</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.module.scad</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.scad</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.scad</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(children)\s*(\()(.*?)(\))</string>
					<key>name</key>
					<string>meta.module.children.scad</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(function)\s+([\w\d]*)\s*(\()(.*?)(\))\s*=</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.function.scad</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.scad</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.scad</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.scad</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.scad</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>name</key>
					<string>meta.function.scad</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
						<dict>
							<key>use</key>
							<string>$self</string>
						</dict>
						<dict>
							<key>name</key>
							<string>meta.body.scad</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.*?</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\B\$(fa|fs|fn|t|vpr|vpt|vpd|children|preview)\b</string>
					<key>name</key>
					<string>variable.parameter.special.scad</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(cos|sin|tan|acos|asin|atan|atan2)\b</string>
					<key>name</key>
					<string>support.function.trigonometric.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(abs|ceil|chr|cross|concat|exp|floor|ln|len|log|lookup|max|min|norm|ord|parent_module|pow|rands|round|search|sign|sqrt|str|version|version_num)\b</string>
					<key>name</key>
					<string>support.function.math.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(scale|resize|rotate|translate|mirror|multmatrix|color|minkowski|hull|offset|linear_extrude|rotate_extrude)\b</string>
					<key>name</key>
					<string>support.function.transformations.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(cube|cylinder|polyhedron|sphere|circle|square|polygon|text|projection)\b</string>
					<key>name</key>
					<string>support.function.primitives.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(union|difference|intersection|render)\b</string>
					<key>name</key>
					<string>support.function.csg.scad</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(import|surface)\b</string>
					<key>name</key>
					<string>support.function.import.scad</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.scad</string>
	<key>uuid</key>
	<string>6f8105a1-5126-4af9-8bc3-4797807d0adf</string>
</dict>
</plist>
